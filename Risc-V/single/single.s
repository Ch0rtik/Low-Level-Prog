.text
__start:
.globl __start
  la a3, number # считывается адрес порядкового номера
  lw a3, 0(a3) # в переменную считывается порядковый номер
  la a4, first # считываентся адрес меньшего числа Фибоначчи
  la a5, second # считываентся адрес большего числа Фибоначчи
  la a6, result # считывается адрес результата
  li a2, 0 # задаётся первоначальное значение счётчику
  
loop:
  bgeu a2, a3, loop_exit
  
  lw t0, 0(a4) # считываются числа
  lw t1, 0(a5)
  
  add t1, t1, t0 # переменная с большим зхначением перезаписывается суммой
  lw t0, 0(a5) # в переменную с мееньшим считывается бывшее большее значение
  
  sw t0, 0(a4) # в памяти перезаписываются значения чисел
  sw t1, 0(a5)
  
  addi a2, a2, 1
  jal zero, loop
  
loop_exit:
  lw t0, 0(a4) # результат перезаписывается значением меньшего числа
  sw t0, 0(a6)
  
  
finish:
  li a0, 17
  li a1, 0
  ecall
  
.data
first:
  .word 0
second:
  .word 1
result:
  .word 0
  
.rodata
number:
  .word 10